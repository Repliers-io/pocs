import{j as e}from"./jsx-runtime-CBjAUaf4.js";import{r as l}from"./index-CoAThXCU.js";const M="AIzaSyBqlRCVfRWu5PagapW3CsV1VVba9fIdknA";function L({onPlaceSelect:w,placeholder:S="Enter an address...",className:C,disabled:b=!1,displayAddressComponents:_=!1}){const n=l.useRef(null),c=l.useRef(null),[x,A]=l.useState(!1),[N,E]=l.useState(null),[o,G]=l.useState(null);return l.useEffect(()=>{(async()=>{var u,p,f;if((f=(p=(u=window.google)==null?void 0:u.maps)==null?void 0:p.places)!=null&&f.Autocomplete){console.log("Google Maps API already loaded"),A(!0);return}try{const s=document.createElement("script");s.src=`https://maps.googleapis.com/maps/api/js?key=${M}&libraries=places&loading=async&v=weekly`,s.async=!0,s.defer=!0;const j=new Promise((r,g)=>{s.onload=()=>{const i=()=>{var a,t,h;(h=(t=(a=window.google)==null?void 0:a.maps)==null?void 0:t.places)!=null&&h.Autocomplete?(console.log("Google Maps API loaded successfully"),r()):setTimeout(i,100)};i()},s.onerror=i=>{console.error("Script loading failed:",i),g(new Error("Failed to load Google Maps API script"))}});document.head.appendChild(s),await j,A(!0),E(null)}catch(s){console.error("Error loading Google Maps API:",s),A(!1),E(s instanceof Error?s.message:"Failed to load Google Maps API")}})()},[]),l.useEffect(()=>{var v,u,p,f,s,j;if(console.log("Autocomplete effect:",{isGoogleLoaded:x,hasContainer:!!n.current,hasAutocomplete:!!c.current,googleMapsAvailable:!!((p=(u=(v=window.google)==null?void 0:v.maps)==null?void 0:u.places)!=null&&p.Autocomplete)}),!(!x||!n.current||c.current)){if(!((j=(s=(f=window.google)==null?void 0:f.maps)==null?void 0:s.places)!=null&&j.Autocomplete)){console.error("Google Maps Autocomplete not available even though isGoogleLoaded is true"),A(!1);return}console.log("Creating autocomplete input...");try{const r=document.createElement("input");r.type="text",r.placeholder=S,r.className="w-full px-3 py-2 border rounded-md",r.disabled=b;const g=new window.google.maps.places.Autocomplete(r,{types:["address"],fields:["address_components","formatted_address","place_id","geometry"]});n.current&&(n.current.innerHTML="",n.current.appendChild(r),c.current=g,console.log("Input appended to container"));const i=()=>{const a=g.getPlace();if(!a.address_components)return;const t={city:"",streetNumber:"",streetName:"",streetSuffix:"",state:"",postalCode:"",country:""};a.address_components.forEach(P=>{const m=P.types,d=P.long_name;if(m.includes("street_number"))t.streetNumber=d;else if(m.includes("route")){const y=d.split(" ");if(y.length>1){const I=y[y.length-1].toLowerCase();["street","st","avenue","ave","road","rd","boulevard","blvd","lane","ln","drive","dr","court","ct","circle","cir","way","place","pl","terrace","ter","trail","trl","parkway","pkwy","square","sq","highway","hwy"].includes(I)?(t.streetSuffix=y.pop()||"",t.streetName=y.join(" ")):t.streetName=d}else t.streetName=d}else m.includes("locality")?t.city=d:m.includes("administrative_area_level_1")?t.state=d:m.includes("postal_code")?t.postalCode=d:m.includes("country")&&(t.country=d)});const h={address:t,formattedAddress:a.formatted_address||"",placeId:a.place_id||"",geometry:a.geometry?{lat:a.geometry.location.lat(),lng:a.geometry.location.lng()}:void 0};G(h),w(h)};return g.addListener("place_changed",i),()=>{c.current&&(window.google.maps.event.clearInstanceListeners(c.current),c.current=null)}}catch(r){console.error("Error initializing autocomplete:",r)}}},[x,w,S,b]),e.jsx("div",{className:C,children:e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"space-y-2",children:[e.jsx("label",{htmlFor:"address-search",className:"text-sm font-medium",children:"Search Address"}),e.jsx("div",{className:"min-w-[400px] w-auto",children:e.jsxs("div",{ref:n,children:[!x&&!N&&e.jsx("div",{className:"text-muted-foreground",children:"Loading Google Maps..."}),N&&e.jsxs("div",{className:"text-red-500 text-sm p-2 border border-red-300 rounded",children:["Error: ",N]})]})})]}),_&&o&&e.jsxs("div",{className:"mt-4 p-4 border rounded-lg bg-gray-50",children:[e.jsx("h3",{className:"text-sm font-medium mb-2",children:"Address Components"}),e.jsxs("dl",{className:"grid grid-cols-2 gap-2 text-sm",children:[e.jsx("dt",{className:"font-medium text-gray-600",children:"Street Number:"}),e.jsx("dd",{children:o.address.streetNumber}),e.jsx("dt",{className:"font-medium text-gray-600",children:"Street Name:"}),e.jsx("dd",{children:o.address.streetName}),e.jsx("dt",{className:"font-medium text-gray-600",children:"Street Suffix:"}),e.jsx("dd",{children:o.address.streetSuffix}),e.jsx("dt",{className:"font-medium text-gray-600",children:"City:"}),e.jsx("dd",{children:o.address.city}),e.jsx("dt",{className:"font-medium text-gray-600",children:"State:"}),e.jsx("dd",{children:o.address.state}),e.jsx("dt",{className:"font-medium text-gray-600",children:"Postal Code:"}),e.jsx("dd",{children:o.address.postalCode}),e.jsx("dt",{className:"font-medium text-gray-600",children:"Country:"}),e.jsx("dd",{children:o.address.country}),e.jsx("dt",{className:"font-medium text-gray-600",children:"Formatted Address:"}),e.jsx("dd",{className:"col-span-2",children:o.formattedAddress})]})]})]})})}L.__docgenInfo={description:`UnifiedAddressSearch Component

@description Address autocomplete component using Google Places API
@param props - The component props
@returns JSX.Element`,methods:[],displayName:"UnifiedAddressSearch",props:{onPlaceSelect:{required:!0,tsType:{name:"signature",type:"function",raw:"(place: PlaceDetails) => void",signature:{arguments:[{type:{name:"PlaceDetails"},name:"place"}],return:{name:"void"}}},description:""},placeholder:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"Enter an address..."',computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},displayAddressComponents:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};export{L as U};
