"use strict";(self.webpackChunkpocs=self.webpackChunkpocs||[]).push([[310],{"./src/components/unified-address-search/unified-address-search.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Useful Components/Unified Address Search",component:__webpack_require__("./src/components/unified-address-search/unified-address-search.tsx").i,parameters:{layout:"centered",docs:{description:{component:'## ðŸ‘¤ User Story\n\nAs a user, I want to search for and select addresses with proper validation and formatting.\n\nThis component helps users:\n- Search for addresses using Google Places Autocomplete\n- Get properly formatted address components (street number, name, suffix, city, state, etc.)\n- View a breakdown of the selected address components\n\n## ðŸš€ Quick Start\n\n1. Ensure you have a valid Google Places API key\n\n2. Import and use the component:\n```tsx\nimport { UnifiedAddressSearch } from "./components/unified-address-search";\n\nfunction App() {\n  const handlePlaceSelect = (place) => {\n    console.log(\'Selected address:\', place);\n    // place.address contains:\n    // - streetNumber\n    // - streetName\n    // - streetSuffix\n    // - city\n    // - state\n    // - postalCode\n    // - country\n  };\n\n  return (\n    <div className="container mx-auto p-4">\n      <UnifiedAddressSearch\n        onPlaceSelect={handlePlaceSelect}\n        displayAddressComponents={true}\n      />\n    </div>\n  );\n}\n```\n\n## ðŸ’¡ Key Features\n\n1. **Google Places Integration** - Uses Google Places Autocomplete API for accurate address suggestions\n2. **Address Component Parsing** - Automatically splits addresses into their components (street number, name, suffix, etc.)\n3. **Visual Feedback** - Optional display of parsed address components below the search input\n4. **TypeScript Support** - Fully typed component with proper interfaces for address data\n\n## ðŸ”§ Props\n\n| Prop | Type | Default | Description |\n|------|------|---------|-------------|\n| onPlaceSelect | (place: PlaceDetails) => void | required | Callback function when an address is selected |\n| placeholder | string | "Enter an address..." | Placeholder text for the search input |\n| className | string | undefined | Additional CSS classes to apply to the component |\n| disabled | boolean | false | Whether the search input is disabled |\n| displayAddressComponents | boolean | false | Whether to show the address components breakdown below the input |\n\n## ðŸ“¦ PlaceDetails Interface\n\n```typescript\ninterface PlaceDetails {\n  address: {\n    streetNumber: string;\n    streetName: string;\n    streetSuffix: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n  };\n  formattedAddress: string;\n  placeId: string;\n  geometry?: {\n    lat: number;\n    lng: number;\n  };\n}\n```'}}},tags:["autodocs"],argTypes:{onPlaceSelect:{action:"selected",description:"Callback function when an address is selected"},placeholder:{control:"text",description:"Placeholder text for the search input"},className:{control:"text",description:"Additional CSS classes to apply to the component"},disabled:{control:"boolean",description:"Whether the search input is disabled"},displayAddressComponents:{control:"boolean",description:"Whether to show the address components breakdown below the input"}}},Default={args:{placeholder:"Enter an address...",displayAddressComponents:!0}},Disabled={args:{...Default.args,disabled:!0}},__namedExportsOrder=["Default","Disabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    placeholder: "Enter an address...",\n    displayAddressComponents: true\n  }\n}',...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}}},"./src/components/unified-address-search/unified-address-search.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{i:()=>UnifiedAddressSearch});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");const GOOGLE_PLACES_API_KEY="AIzaSyBqlRCVfRWu5PagapW3CsV1VVba9fIdknA";function UnifiedAddressSearch({onPlaceSelect,placeholder="Enter an address...",className,disabled=!1,displayAddressComponents=!1}){const inputRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),autocompleteRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[isGoogleLoaded,setIsGoogleLoaded]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[loadingError,setLoadingError]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[savedAddress,setSavedAddress]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{(async()=>{var _window_google_maps_places,_window_google_maps,_window_google;if(null===(_window_google=window.google)||void 0===_window_google||null===(_window_google_maps=_window_google.maps)||void 0===_window_google_maps||null===(_window_google_maps_places=_window_google_maps.places)||void 0===_window_google_maps_places?void 0:_window_google_maps_places.Autocomplete)setIsGoogleLoaded(!0);else try{const script=document.createElement("script");script.src=`https://maps.googleapis.com/maps/api/js?key=${GOOGLE_PLACES_API_KEY}&libraries=places&loading=async&v=weekly`,script.async=!0,script.defer=!0;const loadPromise=new Promise(((resolve,reject)=>{script.onload=()=>{const checkGoogleMaps=()=>{var _window_google_maps_places,_window_google_maps,_window_google;(null===(_window_google=window.google)||void 0===_window_google||null===(_window_google_maps=_window_google.maps)||void 0===_window_google_maps||null===(_window_google_maps_places=_window_google_maps.places)||void 0===_window_google_maps_places?void 0:_window_google_maps_places.Autocomplete)?resolve():setTimeout(checkGoogleMaps,100)};checkGoogleMaps()},script.onerror=error=>{console.error("Script loading failed:",error),reject(new Error("Failed to load Google Maps API script"))}}));document.head.appendChild(script),await loadPromise,setIsGoogleLoaded(!0),setLoadingError(null)}catch(error){console.error("Error loading Google Maps API:",error),setIsGoogleLoaded(!1),setLoadingError(error instanceof Error?error.message:"Failed to load Google Maps API")}})()}),[]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{var _window_google_maps_places,_window_google_maps,_window_google;if(isGoogleLoaded&&inputRef.current&&!autocompleteRef.current){if(!(null===(_window_google=window.google)||void 0===_window_google||null===(_window_google_maps=_window_google.maps)||void 0===_window_google_maps||null===(_window_google_maps_places=_window_google_maps.places)||void 0===_window_google_maps_places?void 0:_window_google_maps_places.Autocomplete))return console.error("Google Maps Autocomplete not available even though isGoogleLoaded is true"),void setIsGoogleLoaded(!1);try{const autocomplete=new window.google.maps.places.Autocomplete(inputRef.current,{types:["address"],fields:["address_components","formatted_address","place_id","geometry"]});autocompleteRef.current=autocomplete;const handlePlaceChanged=()=>{const place=autocomplete.getPlace();if(!place.address_components)return;const addressComponents={city:"",streetNumber:"",streetName:"",streetSuffix:"",state:"",postalCode:"",country:""};place.address_components.forEach((component=>{const types=component.types,value=component.long_name;if(types.includes("street_number"))addressComponents.streetNumber=value;else if(types.includes("route")){const parts=value.split(" ");if(parts.length>1){const lastPart=parts[parts.length-1].toLowerCase();["street","st","avenue","ave","road","rd","boulevard","blvd","lane","ln","drive","dr","court","ct","circle","cir","way","place","pl","terrace","ter","trail","trl","parkway","pkwy","square","sq","highway","hwy"].includes(lastPart)?(addressComponents.streetSuffix=parts.pop()||"",addressComponents.streetName=parts.join(" ")):addressComponents.streetName=value}else addressComponents.streetName=value}else types.includes("locality")?addressComponents.city=value:types.includes("administrative_area_level_1")?addressComponents.state=value:types.includes("postal_code")?addressComponents.postalCode=value:types.includes("country")&&(addressComponents.country=value)}));const placeDetails={address:addressComponents,formattedAddress:place.formatted_address||"",placeId:place.place_id||"",geometry:place.geometry?{lat:place.geometry.location.lat(),lng:place.geometry.location.lng()}:void 0};setSavedAddress(placeDetails),onPlaceSelect(placeDetails)};return autocomplete.addListener("place_changed",handlePlaceChanged),()=>{autocompleteRef.current&&(window.google.maps.event.clearInstanceListeners(autocompleteRef.current),autocompleteRef.current=null)}}catch(error){console.error("Error initializing autocomplete:",error)}}}),[isGoogleLoaded,onPlaceSelect]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label",{htmlFor:"address-search",className:"text-sm font-medium",children:"Search Address"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"min-w-[400px] w-auto",children:isGoogleLoaded?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{ref:inputRef,id:"address-search",type:"text",placeholder,disabled,className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-blue-4 00 focus:border-blue-500"}):loadingError?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"text-red-500 text-sm p-2 border border-red-300 rounded",children:["Error: ",loadingError]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-muted-foreground px-3 py-2 border border-gray-300 rounded-md bg-gray-50",children:"Loading Google Maps..."})})]}),displayAddressComponents&&savedAddress&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mt-4 p-4 border rounded-lg bg-gray-50",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"text-sm font-medium mb-2",children:"Address Components"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("dl",{className:"grid grid-cols-2 gap-2 text-sm",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dt",{className:"font-medium text-gray-600",children:"Street Number:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dd",{children:savedAddress.address.streetNumber}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dt",{className:"font-medium text-gray-600",children:"Street Name:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dd",{children:savedAddress.address.streetName}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dt",{className:"font-medium text-gray-600",children:"Street Suffix:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dd",{children:savedAddress.address.streetSuffix}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dt",{className:"font-medium text-gray-600",children:"City:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dd",{children:savedAddress.address.city}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dt",{className:"font-medium text-gray-600",children:"State:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dd",{children:savedAddress.address.state}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dt",{className:"font-medium text-gray-600",children:"Postal Code:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dd",{children:savedAddress.address.postalCode}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dt",{className:"font-medium text-gray-600",children:"Country:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dd",{children:savedAddress.address.country}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dt",{className:"font-medium text-gray-600",children:"Formatted Address:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("dd",{className:"col-span-2",children:savedAddress.formattedAddress})]})]})]})})}UnifiedAddressSearch.__docgenInfo={description:"UnifiedAddressSearch Component\n\n@description Address autocomplete component using Google Places API\n@param props - The component props\n@returns JSX.Element",methods:[],displayName:"UnifiedAddressSearch",props:{onPlaceSelect:{required:!0,tsType:{name:"signature",type:"function",raw:"(place: PlaceDetails) => void",signature:{arguments:[{type:{name:"PlaceDetails"},name:"place"}],return:{name:"void"}}},description:""},placeholder:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"Enter an address..."',computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},displayAddressComponents:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}}}}]);