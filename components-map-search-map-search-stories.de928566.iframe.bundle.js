"use strict";(self.webpackChunkpocs=self.webpackChunkpocs||[]).push([[810],{"./src/components/map-search/map-search.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CompactSize:()=>CompactSize,CustomCenter:()=>CustomCenter,HighZoom:()=>HighZoom,WorkingExample:()=>WorkingExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>map_search_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),mapbox_gl=__webpack_require__("./node_modules/mapbox-gl/dist/mapbox-gl.js"),mapbox_gl_default=__webpack_require__.n(mapbox_gl),loader_circle=(__webpack_require__("./node_modules/mapbox-gl/dist/mapbox-gl.css"),__webpack_require__("./node_modules/lucide-react/dist/esm/icons/loader-circle.js")),circle_alert=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/circle-alert.js"),house=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/house.js");function MapSearch({apiKey,mapboxToken,initialCenter=[-79.3849,43.6532],initialZoom=11,height="500px",width="100%"}){const mapContainer=(0,react.useRef)(null),map=(0,react.useRef)(null),[isLoading,setIsLoading]=(0,react.useState)(!1),[error,setError]=(0,react.useState)(null),[properties,setProperties]=(0,react.useState)([]),[propertyCount,setPropertyCount]=(0,react.useState)(0),effectiveApiKey=apiKey||void 0,effectiveMapboxToken=mapboxToken||void 0,fetchProperties=async bounds=>{if(effectiveApiKey){setIsLoading(!0),setError(null);try{if("your_sample_api_key_here"===effectiveApiKey||"DUelBJ0uublEQrLO9ajRVcPVJmToDP"===effectiveApiKey){await new Promise((resolve=>setTimeout(resolve,1200)));const mockProperties=(bounds=>{const mockProperties=[],propertyTypes=["Single Family","Condo","Townhouse","Duplex"],streetNames=["Main St","Oak Ave","Maple Dr","Pine Rd","Cedar Ln"],cities=["Toronto","Mississauga","Brampton","Markham","Vaughan"],numProperties=Math.floor(30*Math.random())+20;for(let i=0;i<numProperties;i++){const lat=bounds.getSouth()+Math.random()*(bounds.getNorth()-bounds.getSouth()),lng=bounds.getWest()+Math.random()*(bounds.getEast()-bounds.getWest());mockProperties.push({mlsNumber:`X${String(Math.floor(1e7*Math.random())).padStart(7,"0")}`,listPrice:Math.floor(15e5*Math.random())+3e5,address:{streetNumber:String(Math.floor(9999*Math.random())+1),streetName:streetNames[Math.floor(Math.random()*streetNames.length)],city:cities[Math.floor(Math.random()*cities.length)],state:"ON"},details:{numBedrooms:Math.floor(4*Math.random())+1,numBedroomsPlus:Math.random()>.7?1:0,numBathrooms:Math.floor(3*Math.random())+1,numBathroomsPlus:Math.random()>.5?1:0,numGarageSpaces:Math.floor(3*Math.random()),propertyType:propertyTypes[Math.floor(Math.random()*propertyTypes.length)]},images:[`sample${Math.floor(5*Math.random())+1}.jpg`],type:"Sale",lastStatus:"New",coordinates:{lat,lng}})}return mockProperties})(bounds);return setProperties(mockProperties),setPropertyCount(mockProperties.length),void setIsLoading(!1)}const southWest=bounds.getSouthWest(),northEast=bounds.getNorthEast(),searchUrl=new URL("https://csr-api.repliers.io/listings");searchUrl.searchParams.set("fields","address.*,mlsNumber,listPrice,details.numBedrooms,details.numBedroomsPlus,details.numBathrooms,details.numBathroomsPlus,details.numGarageSpaces,details.propertyType,type,lastStatus,images,coordinates"),searchUrl.searchParams.set("status","A"),searchUrl.searchParams.set("status","U"),searchUrl.searchParams.set("geoSpatial","true"),searchUrl.searchParams.set("bounds",`${southWest.lng},${southWest.lat},${northEast.lng},${northEast.lat}`),searchUrl.searchParams.set("limit","500");const response=await fetch(searchUrl.toString(),{headers:{"REPLIERS-API-KEY":effectiveApiKey,"Content-Type":"application/json"}});if(!response.ok)throw 401===response.status?new Error("Invalid API key. Please check your Repliers API key."):403===response.status?new Error("API key doesn't have permission for geo-spatial search."):429===response.status?new Error("Too many requests. Please wait a moment and try again."):new Error(`API Error: ${response.status}`);const data=await response.json(),propertiesWithCoords=(data.listings||[]).map((listing=>({...listing,coordinates:listing.coordinates||{lat:43.6532+.1*(Math.random()-.5),lng:.1*(Math.random()-.5)-79.3849}})));setProperties(propertiesWithCoords),setPropertyCount(propertiesWithCoords.length)}catch(err){const errorMessage=err instanceof Error?err.message:"Failed to load properties. Please try again.";setError(errorMessage),setProperties([]),setPropertyCount(0)}finally{setIsLoading(!1)}}else setError("API key is required. Please provide the apiKey prop or set NEXT_PUBLIC_REPLIERS_API_KEY environment variable.")};return(0,react.useEffect)((()=>{if(effectiveMapboxToken){if(!map.current)return mapbox_gl_default().accessToken=effectiveMapboxToken,map.current=new(mapbox_gl_default().Map)({container:mapContainer.current,style:"mapbox://styles/mapbox/streets-v12",center:initialCenter,zoom:initialZoom}),map.current.on("load",(()=>{fetchProperties(map.current.getBounds()),map.current.addSource("properties",{type:"geojson",data:{type:"FeatureCollection",features:[]},cluster:!0,clusterMaxZoom:14,clusterRadius:50}),map.current.addLayer({id:"clusters",type:"circle",source:"properties",filter:["has","point_count"],paint:{"circle-color":["step",["get","point_count"],"#51bbd6",100,"#f1c40f",750,"#f28cb1"],"circle-radius":["step",["get","point_count"],20,100,30,750,40]}}),map.current.addLayer({id:"cluster-count",type:"symbol",source:"properties",filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["DIN Offc Pro Medium","Arial Unicode MS Bold"],"text-size":12},paint:{"text-color":"#ffffff"}}),map.current.addLayer({id:"unclustered-point",type:"circle",source:"properties",filter:["!",["has","point_count"]],paint:{"circle-color":"#11b4da","circle-radius":8,"circle-stroke-width":2,"circle-stroke-color":"#fff"}}),map.current.on("click","clusters",(e=>{const features=map.current.queryRenderedFeatures(e.point,{layers:["clusters"]});if(features[0]){var _features__properties;const clusterId=null===(_features__properties=features[0].properties)||void 0===_features__properties?void 0:_features__properties.cluster_id;if(void 0!==clusterId){map.current.getSource("properties").getClusterExpansionZoom(clusterId,((err,zoom)=>{err||"Point"===features[0].geometry.type&&map.current.easeTo({center:features[0].geometry.coordinates,zoom:zoom||15})}))}}})),map.current.on("click","unclustered-point",(e=>{const features=e.features;if(features&&features[0]){const property=features[0].properties;if(property&&"Point"===features[0].geometry.type){const coordinates=features[0].geometry.coordinates.slice(),popupContent=`\n              <div style="min-width: 250px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;">\n                <div style="padding: 12px;">\n                  <div style="display: flex; justify-content: space-between; align-items: start; margin-bottom: 8px;">\n                    <h3 style="margin: 0; font-size: 18px; font-weight: 600; color: #1f2937;">\n                      ${property.listPrice?(price=parseInt(property.listPrice),new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",minimumFractionDigits:0,maximumFractionDigits:0}).format(price)):"Price N/A"}\n                    </h3>\n                    <span style="font-size: 12px; color: #6b7280; background: #f3f4f6; padding: 2px 6px; border-radius: 4px;">\n                      ${property.mlsNumber||"N/A"}\n                    </span>\n                  </div>\n                  \n                  <p style="margin: 0 0 8px 0; font-size: 14px; color: #4b5563; line-height: 1.4;">\n                    ${[property.streetNumber,property.streetName,property.streetSuffix].filter(Boolean).join(" ")}${property.city?`, ${property.city}`:""}${property.state?`, ${property.state}`:""}\n                  </p>\n                  \n                  <div style="display: flex; gap: 12px; font-size: 12px; color: #6b7280; margin-bottom: 8px;">\n                    <span>${property.numBedrooms||"N/A"} bed</span>\n                    <span>${property.numBathrooms||"N/A"} bath</span>\n                    ${property.propertyType?`<span>${property.propertyType}</span>`:""}\n                  </div>\n                  \n                  ${property.images?`\n                    <img \n                      src="https://cdn.repliers.io/${property.images}?class=small" \n                      alt="Property" \n                      style="width: 100%; height: 120px; object-fit: cover; border-radius: 6px; margin-top: 8px;"\n                      onerror="this.style.display='none'"\n                    />\n                  `:""}\n                </div>\n              </div>\n            `;new(mapbox_gl_default().Popup)({closeOnClick:!1}).setLngLat(coordinates).setHTML(popupContent).addTo(map.current)}}var price})),map.current.on("mouseenter","clusters",(()=>{map.current.getCanvas().style.cursor="pointer"})),map.current.on("mouseleave","clusters",(()=>{map.current.getCanvas().style.cursor=""})),map.current.on("mouseenter","unclustered-point",(()=>{map.current.getCanvas().style.cursor="pointer"})),map.current.on("mouseleave","unclustered-point",(()=>{map.current.getCanvas().style.cursor=""}))})),map.current.on("moveend",(()=>{map.current&&fetchProperties(map.current.getBounds())})),()=>{map.current&&(map.current.remove(),map.current=null)}}else setError("MapBox access token is required. Please provide mapboxToken prop or set NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN environment variable.")}),[effectiveMapboxToken,effectiveApiKey,initialCenter,initialZoom]),(0,react.useEffect)((()=>{if(map.current&&map.current.getSource("properties")){const geojsonData={type:"FeatureCollection",features:properties.map((property=>{var _property_address,_property_address1,_property_address2,_property_address3,_property_address4,_property_details,_property_details1,_property_details2,_property_images;return{type:"Feature",properties:{mlsNumber:property.mlsNumber,listPrice:property.listPrice,streetNumber:null===(_property_address=property.address)||void 0===_property_address?void 0:_property_address.streetNumber,streetName:null===(_property_address1=property.address)||void 0===_property_address1?void 0:_property_address1.streetName,streetSuffix:null===(_property_address2=property.address)||void 0===_property_address2?void 0:_property_address2.streetSuffix,city:null===(_property_address3=property.address)||void 0===_property_address3?void 0:_property_address3.city,state:null===(_property_address4=property.address)||void 0===_property_address4?void 0:_property_address4.state,numBedrooms:null===(_property_details=property.details)||void 0===_property_details?void 0:_property_details.numBedrooms,numBathrooms:null===(_property_details1=property.details)||void 0===_property_details1?void 0:_property_details1.numBathrooms,propertyType:null===(_property_details2=property.details)||void 0===_property_details2?void 0:_property_details2.propertyType,images:null===(_property_images=property.images)||void 0===_property_images?void 0:_property_images[0]},geometry:{type:"Point",coordinates:[property.coordinates.lng,property.coordinates.lat]}}}))};map.current.getSource("properties").setData(geojsonData)}}),[properties]),(0,jsx_runtime.jsxs)("div",{style:{width,height},className:"relative",children:[(0,jsx_runtime.jsx)("div",{ref:mapContainer,style:{width:"100%",height:"100%"},className:"rounded-lg overflow-hidden"}),isLoading&&(0,jsx_runtime.jsx)("div",{className:"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center rounded-lg",children:(0,jsx_runtime.jsxs)("div",{className:"bg-white rounded-lg p-4 flex items-center gap-3",children:[(0,jsx_runtime.jsx)(loader_circle.Z,{className:"w-5 h-5 animate-spin text-blue-600"}),(0,jsx_runtime.jsx)("span",{className:"text-gray-700",children:"Loading properties..."})]})}),error&&(0,jsx_runtime.jsx)("div",{className:"absolute top-4 left-4 right-4 bg-red-50 border border-red-200 rounded-lg p-3",children:(0,jsx_runtime.jsxs)("div",{className:"flex items-center gap-2 text-red-700",children:[(0,jsx_runtime.jsx)(circle_alert.Z,{className:"w-4 h-4"}),(0,jsx_runtime.jsx)("span",{className:"text-sm font-medium",children:error})]})}),!error&&!isLoading&&propertyCount>0&&(0,jsx_runtime.jsx)("div",{className:"absolute top-4 left-4 bg-white rounded-lg shadow-md p-3",children:(0,jsx_runtime.jsxs)("div",{className:"flex items-center gap-2 text-gray-700",children:[(0,jsx_runtime.jsx)(house.Z,{className:"w-4 h-4"}),(0,jsx_runtime.jsxs)("span",{className:"text-sm font-medium",children:[propertyCount," ",1===propertyCount?"property":"properties"," found"]})]})}),!error&&(0,jsx_runtime.jsx)("div",{className:"absolute bottom-4 right-4 bg-white rounded-lg shadow-md p-3 max-w-xs",children:(0,jsx_runtime.jsxs)("div",{className:"text-xs text-gray-600",children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center gap-1 mb-1",children:[(0,jsx_runtime.jsx)("div",{className:"w-3 h-3 bg-blue-500 rounded-full"}),(0,jsx_runtime.jsx)("span",{children:"Individual properties"})]}),(0,jsx_runtime.jsxs)("div",{className:"flex items-center gap-1",children:[(0,jsx_runtime.jsx)("div",{className:"w-3 h-3 bg-blue-400 rounded-full"}),(0,jsx_runtime.jsx)("span",{children:"Property clusters (click to zoom)"})]})]})})]})}MapSearch.__docgenInfo={description:"MapSearch Component\n\n@description An interactive map component that displays real estate properties as clustered dots,\nintegrating MapBox GL JS with Repliers API for geo-spatial property search.\n\nFeatures:\n- Interactive MapBox map with clustering\n- Real-time property search based on map viewport\n- Property markers with popups showing listing details\n- Automatic clustering for performance with large datasets\n- Responsive design with customizable dimensions\n- Toronto default center with IP-based geolocation fallback\n\n@param props - The component props\n@returns JSX.Element",methods:[],displayName:"MapSearch",props:{apiKey:{required:!1,tsType:{name:"string"},description:"Repliers API key - required for production use (env fallback only works in development)"},mapboxToken:{required:!1,tsType:{name:"string"},description:"MapBox access token - required for map display"},initialCenter:{required:!1,tsType:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},description:"Initial map center coordinates [lng, lat]",defaultValue:{value:"[-79.3849, 43.6532]",computed:!1}},initialZoom:{required:!1,tsType:{name:"number"},description:"Initial zoom level",defaultValue:{value:"11",computed:!1}},height:{required:!1,tsType:{name:"string"},description:"Map container height",defaultValue:{value:'"500px"',computed:!1}},width:{required:!1,tsType:{name:"string"},description:"Map container width",defaultValue:{value:'"100%"',computed:!1}}}};const SAMPLE_MAPBOX_TOKEN="pk.eyJ1IjoiZXhhbXBsZSIsImEiOiJjbGV4YW1wbGUifQ.example_token_here",map_search_stories={title:"Tutorials/Map Search with Property Clustering using MapBox and Repliers API",component:MapSearch,parameters:{layout:"fullscreen",docs:{page:()=>null}},argTypes:{apiKey:{control:"text",description:"Your Repliers API key (required for real data)",table:{type:{summary:"string"},defaultValue:{summary:"required"}}},mapboxToken:{control:"text",description:"Your MapBox access token (required)",table:{type:{summary:"string"},defaultValue:{summary:"required"}}},initialCenter:{control:"object",description:"Initial map center coordinates [lng, lat]",table:{type:{summary:"[number, number]"},defaultValue:{summary:"[-79.3849, 43.6532] (Toronto)"}}},initialZoom:{control:{type:"range",min:1,max:18,step:1},description:"Initial zoom level",table:{type:{summary:"number"},defaultValue:{summary:"11"}}},height:{control:"text",description:"Map container height",table:{type:{summary:"string"},defaultValue:{summary:"500px"}}},width:{control:"text",description:"Map container width",table:{type:{summary:"string"},defaultValue:{summary:"100%"}}}}},WorkingExample={args:{apiKey:"DUelBJ0uublEQrLO9ajRVcPVJmToDP",mapboxToken:SAMPLE_MAPBOX_TOKEN,initialCenter:[-79.3849,43.6532],initialZoom:11,height:"600px",width:"100%"},decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{padding:"20px",minHeight:"650px"},children:(0,jsx_runtime.jsx)(Story,{})})],parameters:{docs:{description:{story:"🗺️ **Interactive MapBox + Repliers Integration!** This demo shows real estate properties as clustered dots on an interactive map. Pan and zoom to see properties in different areas. Click on individual dots to see property details, or click clusters to zoom in. **Note:** This uses mock data for demo purposes - replace with your actual API keys for real MLS data."}}}},CustomCenter={args:{apiKey:"DUelBJ0uublEQrLO9ajRVcPVJmToDP",mapboxToken:SAMPLE_MAPBOX_TOKEN,initialCenter:[-74.006,40.7128],initialZoom:12,height:"500px",width:"100%"},decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{padding:"20px",minHeight:"550px"},children:(0,jsx_runtime.jsx)(Story,{})})],parameters:{docs:{description:{story:"📍 **Custom Location Example** - Map centered on New York City instead of Toronto. Shows how easy it is to customize the initial map location and zoom level."}}}},CompactSize={args:{apiKey:"DUelBJ0uublEQrLO9ajRVcPVJmToDP",mapboxToken:SAMPLE_MAPBOX_TOKEN,initialCenter:[-123.1207,49.2827],initialZoom:11,height:"400px",width:"100%"},decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{padding:"20px",minHeight:"450px",maxWidth:"800px",margin:"0 auto"},children:(0,jsx_runtime.jsx)(Story,{})})],parameters:{docs:{description:{story:"📐 **Compact Map Example** - Smaller height (400px) and constrained width, perfect for embedding in sidebars or smaller sections. Centered on Vancouver, BC."}}}},HighZoom={args:{apiKey:"DUelBJ0uublEQrLO9ajRVcPVJmToDP",mapboxToken:SAMPLE_MAPBOX_TOKEN,initialCenter:[-79.3832,43.6532],initialZoom:15,height:"500px",width:"100%"},decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{padding:"20px",minHeight:"550px"},children:(0,jsx_runtime.jsx)(Story,{})})],parameters:{docs:{description:{story:"🔍 **High Zoom Level Example** - Started at zoom level 15 for a closer neighborhood view. Notice how properties appear as individual dots rather than clusters at this zoom level."}}}},__namedExportsOrder=["WorkingExample","CustomCenter","CompactSize","HighZoom"];WorkingExample.parameters={...WorkingExample.parameters,docs:{...WorkingExample.parameters?.docs,source:{originalSource:'{\n  args: {\n    apiKey: SAMPLE_REPLIERS_API_KEY,\n    mapboxToken: SAMPLE_MAPBOX_TOKEN,\n    initialCenter: [-79.3849, 43.6532],\n    // Toronto\n    initialZoom: 11,\n    height: "600px",\n    width: "100%"\n  },\n  decorators: [Story => <div style={{\n    padding: "20px",\n    minHeight: "650px"\n  }}>\n        <Story />\n      </div>],\n  parameters: {\n    docs: {\n      description: {\n        story: "🗺️ **Interactive MapBox + Repliers Integration!** This demo shows real estate properties as clustered dots on an interactive map. Pan and zoom to see properties in different areas. Click on individual dots to see property details, or click clusters to zoom in. **Note:** This uses mock data for demo purposes - replace with your actual API keys for real MLS data."\n      }\n    }\n  }\n}',...WorkingExample.parameters?.docs?.source}}},CustomCenter.parameters={...CustomCenter.parameters,docs:{...CustomCenter.parameters?.docs,source:{originalSource:'{\n  args: {\n    apiKey: SAMPLE_REPLIERS_API_KEY,\n    mapboxToken: SAMPLE_MAPBOX_TOKEN,\n    initialCenter: [-74.006, 40.7128],\n    // New York City\n    initialZoom: 12,\n    height: "500px",\n    width: "100%"\n  },\n  decorators: [Story => <div style={{\n    padding: "20px",\n    minHeight: "550px"\n  }}>\n        <Story />\n      </div>],\n  parameters: {\n    docs: {\n      description: {\n        story: "📍 **Custom Location Example** - Map centered on New York City instead of Toronto. Shows how easy it is to customize the initial map location and zoom level."\n      }\n    }\n  }\n}',...CustomCenter.parameters?.docs?.source}}},CompactSize.parameters={...CompactSize.parameters,docs:{...CompactSize.parameters?.docs,source:{originalSource:'{\n  args: {\n    apiKey: SAMPLE_REPLIERS_API_KEY,\n    mapboxToken: SAMPLE_MAPBOX_TOKEN,\n    initialCenter: [-123.1207, 49.2827],\n    // Vancouver\n    initialZoom: 11,\n    height: "400px",\n    width: "100%"\n  },\n  decorators: [Story => <div style={{\n    padding: "20px",\n    minHeight: "450px",\n    maxWidth: "800px",\n    margin: "0 auto"\n  }}>\n        <Story />\n      </div>],\n  parameters: {\n    docs: {\n      description: {\n        story: "📐 **Compact Map Example** - Smaller height (400px) and constrained width, perfect for embedding in sidebars or smaller sections. Centered on Vancouver, BC."\n      }\n    }\n  }\n}',...CompactSize.parameters?.docs?.source}}},HighZoom.parameters={...HighZoom.parameters,docs:{...HighZoom.parameters?.docs,source:{originalSource:'{\n  args: {\n    apiKey: SAMPLE_REPLIERS_API_KEY,\n    mapboxToken: SAMPLE_MAPBOX_TOKEN,\n    initialCenter: [-79.3832, 43.6532],\n    // Toronto downtown\n    initialZoom: 15,\n    height: "500px",\n    width: "100%"\n  },\n  decorators: [Story => <div style={{\n    padding: "20px",\n    minHeight: "550px"\n  }}>\n        <Story />\n      </div>],\n  parameters: {\n    docs: {\n      description: {\n        story: "🔍 **High Zoom Level Example** - Started at zoom level 15 for a closer neighborhood view. Notice how properties appear as individual dots rather than clusters at this zoom level."\n      }\n    }\n  }\n}',...HighZoom.parameters?.docs?.source}}}}}]);